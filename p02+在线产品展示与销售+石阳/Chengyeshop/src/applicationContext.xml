<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/tx   
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!--1:开启包扫描  -->
	<context:component-scan base-package="com.itchengye"/>
	<!--2:开启springmvc的注解支持 -->
	<mvc:annotation-driven/>
	
	<!-- 1.将连接池放入spring容器 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="jdbcUrl" value="com.mysql.jdbc.Driver" ></property>
		<property name="driverClass" value="jdbc:mysql:///chengyeshop" ></property>
		<property name="user" value="root" ></property>
		<property name="password" value="123456" ></property>
	</bean>
	
	
	<!-- 2.将JDBCTemplate放入spring容器 -->
	<bean name="jt" class="org.springframework.jdbc.core.JdbcTemplate" >
		<property name="dataSource" ref="dataSource" ></property>
	</bean>
	<!-- 3:SessionFactory对象 -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
	</bean>
	
	添加事务管理配置
	5.创建平台事务管理器
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean> -->
	<!-- 6.创建事务通知 -->
	<!-- <tx:advice id="txAdivce" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED"/>
			<tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED"/>
			<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED"/>
			<tx:method name="find*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
			<tx:method name="*" isolation="DEFAULT" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice> -->
	<!-- 7.创建事务切面 -->
	<!-- <aop:config>
		<aop:pointcut expression="execution(* com.itchengye.service.*.*(..))" id="myPt"/>
		<aop:advisor advice-ref="txAdivce" pointcut-ref="myPt"/>
	</aop:config> -->
	
	<!-- 8.返回的视图的解释 -->
   <!-- 为了设置去掉返回路径的前缀,后缀,所以需要配置视图解释器 -->
   <bean name="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <!--  默认的视图是不支持jstl,所以要支持jstl,配置jstl的视图 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
       <!--  给视图的路径自动加上前缀,等同我们在业务控制器不用写前缀了 -->
       <property name="prefix" value="/"></property>
        <!--给视图的路径自动加上后缀,等同我们在业务控制器不用写.jsp了 -->
       <property name="suffix" value=".jsp"></property>
   </bean>
   <mvc:default-servlet-handler/>
	<!-- <mvc:resoureces mapping="css/**" location="css/" />
	<mvc:resoureces mapping="js/**" location="js/" /> -->
	
</beans>
